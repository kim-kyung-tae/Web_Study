1 텍스트 테그
    1)제목 테그
        <h1> 텍스트문</h1>

    2)문단 테그
        <p>긴 문장</p>

    3)강제개행 테그
        <br> 혹은 <br /> : 엔터처리가 되지 않는 텍스트문에 엔터를 처리해줌

    4)순서가 있는 목록테그(리스트)
        <ol>
            <li>리스트</li>
            <li>리스트</li>
        </ol>

        -순서가 없는 목록테크(리스트)  
        <ul>
             <li>리스트</li>
             <li>리스트</li>
        </ul>  

    5)정의된 목록(리스트)
        <dl> 
            <dt>정의된 용어</dt>
            <dd>용어에 대한 설명</dd>
        </dl>

        <dl>테그의 자손은 <dt>와<dl>만 존재할 수 있음음
        <dl>테그는 용어와 설명들을 묶는 그릅의 의미
        <dt>테그는 리스트 한개의 용어를 의미
        <dd>테그는 리스트 한개의 용어에 대한 설명을 의미 

    6)중첩된 리스트
        <ul>
            <li>상위리스트</li>
            <li>
                상위리스트 
                <ul>
                    <li>하위리스트 </li>
                    <li>하위리스트 </li>
                </ul>
            </li>
        </ul>

        <ul>
             <li>
                빙수메뉴
                <ul>
                    <li>인절미설빙</li>
                    <li>밀크밭설빙</li>
                </uli>
            </li>
        </ul>

2. 글자형태 테그,첨자 테그,강조 테그 

    1)글자 형태 테그 
        <b></b> : 글자를 굵게 하는 테그 
        <i></i> : 글자를 기울이는 테그 
        <ins></ins> : 글자에 밑줄주는 테그 
        <del></del> : 글자 가운데 줄을 주는 테그
        <small></small> : 글자를 작게하는 테그 

    2)첨자 테그 
        <sup></sup> : 위첨자 테그 
        <sub></sub> : 아래첨자 테그 
        <ruby></ruby> : 루비문자 테그, 일본어에서 한문위에 하라가나를 첨부하듯이 사용하는 테그 
        <rt></rt> : 루비테그의 자손으로 첨부해서 보여주는 주석을 의미하는 테그 

    3)강조 테그 
        <strong></strong> : 글자를 굵게하며 강조하는 테그 
        <em></em> : 글자를 기울이며 강조하는 테그 
        <mark></mark> : 글자에 음영주며 강조하는 테그 

3. a(앵커) 테그와 하이퍼링크 

    1)테그의 속성 문법 : 테그가 갖는 특징을 기술한 것이 속성
        <테그명 속성명 = "속성값">

    2)a(앵커) 테그 
        하이퍼링크 : 링크가 걸린 컨덴츠를 클릭하면 다른 문서(html페이지)로 이동하는 기술 

        a테그의 속성
        href : 이동될 페이지 경롤를 작성 
        target : 이동될 페이지의 위치 지정 
        title : 링크에 대한 설명 텍스트를 툴팁으로 보여줌 

        target의 속성값
        _self : 클릭한 컨텐츠를 담은 html과 동일한 창(현재창)에서 페이지를 이동(속성 생략과 같음)
        _blank : 새창 혹은 새탭에서 페이지 이동 
        _parent : 현재 페이지가 아이프레임 내부의 페이지인 경우 그 부모가 되는 창에서 페이지를 이동 
        _top : 어떤 프레임에 있던 정의된 최고 상단 페이지로 이동 
        filename : 현재 페이지 내부에 있는 특정 이이프레임에서 페이지를 이동

        현재 창에서 바뀌는 형태
        <ul>
            <li><a href="http://google.com">구글</a></li>
            <li><a href="http://naver.com">네이버</a></li>
        </ul>   

        새 창으로 이동하는 형태
        <ul>
            <li><a href="http://google.com" target="_blank">구글</li>
            <li><a href="http://naver.com" target="_blank">네이버</a></li>
        </ul> 

        타이틀 속성 보여주는 형태 
        <ul>
            <li><a href="http://google.com" target="_blank" title="구글페이지 바로가기">구글</li>
            <li><a href="http://naver.com" target="_blank" title="네이버 페이지 바로가기">네이버</a></li>
        </ul> 

    3)경로 개념 : 웹 페이지에서 파일을 찾는 방식(URL)

        절대 경로 : 절대적으로 바뀌지 않는 주소를 의미, 보통은 외부페이지(다른 사이트)를 연결할 때 사용 
            내 컴퓨터의 절대경로 : D:\HTML공부 
            웹 페이지의 절대경로 : http://www.happybath.com/kr/ko/story/brand-history/brand-history.html

        상대 경로 : 상대적으로 바뀌는 주소를 의미, 현재 코드를 작성하고 있는 열린 문서가 기준인 방식 
            파일명.확장자 : 현재 문서와 같은 폴더에 잇는 파일을 연결 
            폴더명/파일명.확장자 : 현재 문서에서 하위폴더에 있는 파일을 연결 
            ../파일명.확장자 : 현재 문서에서 상위폴더에 있는 파일을 연결 


4. 이미지 테그

    1)이미지 테그 기본 문법 
        <img src="이미지경로" alt="대체텍스트">

        이미지 테그의 속성 
        src : 이미지의 경로를 작성하는 테크 
        alt : 이미지의 대체텍스트로 경로가 잘못되는 경우 대체텍스트가 보인다.
        width : 이미지의 가로크기 속성으로 값의 단위는 작성하지 않는다(px단위로 자동인식)
        height : 이미지의 세로높이 속송으로 값의 단위는 작성하지 않는다 

    2)웹서버에 올리는 파일명 규칙
        영문 대소문자를 구분한다
        숫자는 보통 영문뒤에 작성한다 
        특수문자는 _ 만 사용한다 
        공백문자는 사용하지 않는다 

5. <div> 테그와 <span> 테그 

        div : 여러 테그를 묶어 CSS를 한번에 적용하는 테그 - 구역테그 혹은 박스 테그라 부름 
        span : 한 테그를 나눠 여러 CSS를 적용하는 테그 - 분리테그 

        <div>
            <h1>애국가</h1>
            <p>
                동해물과 백두산이 마르고 닿도록<br />
                하느님이 보우하사 우리나라 만세<br />
                무궁화 삼천리 화려강산<br />
                대한사람 대한으로 길이 보전하세 
            </p>
        </div>

        <ul>
            <li>
                <span class="title">1회 제공량 :</span>
                <span class=decript">200kal</span>
            </li>
            <li>
                <span class="title">포화지방 :</span>
                <span class=decript">4.5g</span>
            </li>
            <li>
                <span class="title">카페인 :</span>
                <span class=decript">75mg</span>
            </li>
        </ul>

6. 테이블(table) 테그 
    테이블 테그란? 홈페이지에서 정보를 행과 열의 표로 보여주는 테크 

    1)기본 구조 관련 테그 
        table : table 전체를 감싸는 테그 
        caption : table의 제목이나 설명을 작성하는 테그, 테이블 가로폭의 가운데 오는 것이 기본 
        tr : 테이블의 행을 의미하는 테그, 자손으로 th나 td가 반드시 있어야 한다
        th : 테이블의 제목 셀(칸)을 의미하는 테그, 부모인 tr안에 있어야 한다. CSS기본값은 글자가 굵게 처리되고 셀에서 가로 가운데 정열 
        td : 테이블의 일반 셀(칸)을 의미하는 테그, 부모인 tr안에 있어야 한다. CSS기본값은 왼쪽정열

        <table border="1">
            <caption>표제목</caption>
            <tr>
                <th>제목셀1</th>
                <th>제목셀2</th>
            </tr>
            <tr>
                <td>일반칸1</td>
                <td>일반칸2</td>
            </tr>
        </table>

        2열 2행 테이블 작성, border = 1 이기에 테두리가 보임

    2)table 테그의 속성

        border : 테이블이 갖고 있는 테이블과 셀 모두에 선처리 
        width : 테이블의 가로폭을 설정 
        cellpadding : 셀의 안쪽 여백 
        cellspacing : 셀의 바깥쪽 여백 

        <table border="1" width="500 cellpadding="20" cellspacing="10>
            <caption>표제목</caption>
            <tr>
                <th>제목셀1</th>
                <th>제목셀2</th>
            </tr>
            <tr>
                <td>일반칸1</td>
                <td>일반칸2</td>
            </tr>
        </table>

    3)열(셀-th,td) 테그의 속성 
        width : 셀의 가로폭을 설정 
        height : 셀의 세로폭을 설정 
        align : 셀의 텍스트나 이미지등을 가로 정열 시켜주는 속성 : left, right, center
        valign : 셀의 텍스트나 이미지등을 세로 정열 시켜주는 속성 : top, middle, bottom

        <table border="1">
            <caption>표제목</caption>
            <tr>
                <th width="200" height="50" align="right">제목셀1</th>
                <th width="300" height="50" valign="bottom">제목셀2</th>
            </tr>
            <tr>
                <td width="200">일반칸1</td>
                <td width="300">일반칸2</td>
            </tr>
        </table>

    4)셀 병합 속성
        colspan : 같은 행의 칸들을 병합  ex)<td colspan="칸수">
        rowspan : 다른 행의 칸들을 병합  ex)<td rowspan="칸수">

        <table border="1">
            <caption>표제목</caption>
            <tr>
                <th colspan="3">제목셀1</th>
            </tr>
            <tr>
                <td>일반칸1</td>
                <td>일반칸2</td>
                <td>일반칸3</td>
            </tr>
        </table>

        <table border="1">
            <caption>표제목</caption>
            <tr>
                <th rowspan="2">제목셀1</th>
                <th>제목셀2</th>
                <th>제목셀3</th>
            </tr>
            <tr>
                <td>일반칸2</td>
                <td>일반칸3</td>
            </tr>
        </table>

    5)HTML5에 새로나온 테이블 행 그룹 테그 

        thead : 테이블의 제목들을 묶는 그룹 테그 
        tbody : 테이블의 일반적 데이터들을 묶는 그룹 테그 
        tfoot : 테이블의 마지막 아래 부분을 묶는 그룹 테그 

        <table border="1">
            <caption>방한 횟수별 한국 여행시 좋았던 점(단위 : 명)</caption>
            <thead>
                <tr>
                    <th>방한 회수</th>
                    <th>편리한 교통</th>
                    <th>친절한 사람들</th>
                    <th>독특한 문화유산</th>
                    <th>맛있는 음식</th>
                    <th>다양한 쇼핑</th>
                </tr>
            </thead>  
            <tbody>  
                <tr>
                    <td>1회</td>
                    <td>3,700</td>
                    <td>4,200</td>
                    <td>3,700</td>
                    <td>4,100</td>
                    <td>4,900</td>
                </tr>
                <tr>
                    <td>2회</td>
                    <td>3,100</td>
                    <td>4,000</td>
                    <td>3,500</td>
                    <td>4,700</td>
                    <td>4,200</td>
                </tr>
                <tr>
                    <td>3회 이상</td>
                    <td>3,500</td>
                    <td>4,500</td>
                    <td>3,200</td>
                    <td>5,000</td>
                    <td>3,900</td>
                </tr>
            </tbody> 
            <tfoot>
                <tr>
                    <td>합계</td>
                    <td>10,300</td>
                    <td>12,700</td>
                    <td>10,400</td>
                    <td>13,800</td>
                    <td>13,000</td>
                </tr>    
            </tfoot>   
        </table>

    6)HTML5에 새로나온 테이블 열 그룹 테그

        colgroup : 열을 그룹으로 묶을 수 있도록 해주는 테그 
        col : colgroup의 자손으로 열단위를 나눌 수 있다. span 속성을 사용하여 몇 열을 그룹으로 묶을지 설정
              ex) <col span="3"> => 3열을 그룹으로 묶음


7. form 관련 테그 

    1)form 테그 : form 테그는 사용자가 입력한 값을 수집하는데 사용되는 양식을 정의한다 

        action : form양식의 데이터내용을 전송할 때 데이터가 보내질 서버 페이지 주소를 작성하는 속성
        target : 제출 된 결과가 새 브라우저 탭, 프레임 또는 현재 창에서 열리는지 여부를 지정 
        method : 데이터를 제출할 때 사용할 HTTP 메소드(GET 또는 POST)를 지정 
                - get : 데이터들이 주소표시줄에 표시됨, 보안이 필요없는 데이터에서 사용 
                - post : 데이터들을 주소표시줄에 표시하지 않음, 보안이 필요한 데이터에서 사용 

        * 위의 세가지 외에도 accept-charset, autocomplete, enctype, name, novalidate 등의 속성이 더 있다 

        <from action="서버페이지주소" method="post">

    2)form 구역 테그 : form의 데이터를 그룹으로 묶어주는 테그   

        fieldset : 폼의 구역을 나누는 테그 
        legent : 폼 구역의 이름을 작성하는 테그 

        <from action="#" method="post">
            <fieldset>
                <legent>필수입력 항목</legent>
                폼양식
            </fieldset>
            <fieldset>
                <legent>선택입력 항목</legent>
                폼양식
            </fieldset>
        </form>

    3)기본 입력양식 테그(input)
        - 사용자가 입력할 수 있는 입력양식들을 의미하는 테그 

        text : 한줄 텍스트를 입력할 수 있는 상자 
        password : 텍스트 입력시 암호화처리되어 표시하는 상자 
        checkbox : 체크시 체크되는 네모박스로 보통 여러값 중 중복 체크시 사용 
        radio : 체크시 체크되는 원형박스로 보통 여러값 중 하나만 체크시 사용 
        button : 버튼 형태 중 기본 형태 
        image : 버튼 형태 중 이미지를 삽입할 수 있는 버튼
        submit : 폼의 데이터를 서버에 전송하는 버튼 
        reset : 폼의 데이터를 입력취소하는 버튼 
        file : 컴퓨터의 파일응 찾아주는 버튼 

        <from action="#" method="post">
            <input type="text"><br>
            <input type="password"><br>
            <input type="checkbox"><br>
            <input type="radio"><br>
            <input type="button" value="우편번호찾기"><br>
            <input type="reset" value="입력취소"><br>
            <input type="submit" value="회원가입"><br>
            <input type="image" src="btn_write_b.gif" alt="쓰기버튼"><br>
            <input type="file"><br>
        </form>

    4)선택상자(select)
        - 여러 옵션 중 한개의 값을 선택하는 상자
        - multple이란 속성을 사용하면 여러 값도 선택 가능하다

        -select 관련 테그
            select : 선택 옵션들을 묶는 역할을 하는 테그
            option : 옵션 값 한개한개를 담는 테그 
            optgroup : 옵션이 여러 그룹으로 되어 있을 때 그룹으로 묶는 테그 

        -select 관련 속성 
            value : 옵션의 값을 작성하는 속성 
            label : optgroup의 이름이 되는 속성
            selected : 처음 보이는 옵션값은 첫번째 작성되어 있는 option테그의 값인데 바꾸고 싶을 때 사용 

        <from action="#" method="post">
            <fieldset>
                <legent>기본 선택 상자</legent>
                <select>
                    <option>점심메뉴</option>
                    <option>김치찌게</option>
                    <option selected>초밥</option>
                    <option>짜장면</option>
                </select>
            </fieldset>
            <fieldset>
                <legent>그룹 선택 상자</legent>
                <select>
                    <optgroup label="중식">
                        <option>짜장면</option>
                        <option>짬뽕</option>
                    </optgroup>
                    <optgroup label="일식">
                        <option>초밥</option>
                        <option>모밀</option>
                    </optgroup>
                    <optgroup label="한식">
                        <option>김치찌게</option>
                        <option>비빔밥</option>
                    </optgroup>
                </select>
            </fieldset>
        </form>   

    5)여러 줄 입력상자(textarea) : 글쓰기의 내용처럼 여러줄을 입력해서 사용해야하는 입력양식의 테그

        -textarea 속성
            cols : 여러 줄 입력상자에 가로로 입력되는 최대글자수를 지정, 영문으로 되어 있어 한글은 맞지 않음 
            rows : 여러 줄 입력상자에 표시할 세로 줄수 지정, 그 줄 수를 넘겨서 글을 작성하면 스크롤바가 생긴다 

        <form action="#">
            <textarea cols="30" rows="10></textarea>
        </form>    

    6)label 테그 
        - 폼관련 테그인 input, textarea, select 테그에 이름을 붙여주는 테그 
        - input, textarea, select 테그의 id값과 lable 테그의 for값은 같아야 한다 

        input테그의 id속성 => <input type="text" id="box1">
        label테그의 for속성 => <label for="box1">라벨</label>    

        <form action="#">
            <input type="chekbox" id="idChk"><br>
            <label for="idChk">아이디 체크하기</label>
            <hr>
            <label for="selcectbox">선택옵션</label>
            <select id="selcectbox">
                <option>옵션1</option>
                <option>옵션2</option>
                <option>옵션3</option>
            </select>
            <hr> 
            <label for="substance">내용</label>
            <textarea id="substance" cols="30" rows="10"></textarea>
        </form>

        * 위 예시에서 <hr> 테그는 가로선을 긋는 테그이다 


8. 기본 input 테그의 속성

    1) input의 텍스트상자(text,password)의 속성 
        - id : label테그와 이어지게 해주는 id값 
        - value : 사용자가 입력상자에 작성하는 값, 미리 값을 표시할 수 있다 
        - maxlength : 사용자가 입력할 최대의 글자수 지정 속성 
        - placeholder : 예시 텍스트 
        - disable : 입력상자를 사용 불가능하게 막은 속성 

        <form action="#">
            <fieldset>
                <legent>로그인 폼</legent>
                <input type="text" maxlength="8" placeholder="아이디입력"> <br>
                <input type="password" maxlength="8" placeholder="비밀번호입력">
            </fieldset>
            <fieldset>
                <legent>수량선택</legent>
                <button>-</button>
                <input type="text" value="1">
                <button>+</button>
            </fieldset>
            <fieldset>
                <legent>주소입력</legent>
                <input type="text" disable value="서울시 강남구 역삼동">
                <input type="text" placeholder="나머지주소">
            </fieldset>
        </form>

    2) input의 체크관련(checkbox,radio)의 속성 
        - checkbox는 여러값을 체크하고 싶을 때 사용 
        - radio는 체크될 값 중 한개만 체크해야 할 대 사용 

        - id : label테그와 이어지게 해주는 id값
        - name : 여러 checkbox나 여러 radio값이 하나의 세트로 인식될 수 있도록 같은 이름 설정 
        - checked : 미리 체크되서 나오게 처리하는 속성 
        
        <form action="#">
            <fieldset>  
                <legent>취미 체크</legent>
                <input type="checkbox" id="hobby01">
                <label for="hobby01">게임</label><br>
                <input type="checkbox" id="hobby02">
                <label for="hobby02">영화감상</label><br>
                <input type="checkbox" id="hobby03" checked>
                <label for="hobby03">음주가무</label>
            </fieldset>
            <fieldset>
                <legent>성별 체크</label>
                <input type="radio" id="male" name="gender" checked>
                <label for="male">남자</label><br>
                <input type="radio" id="female" name="gender">
                <label for="female">여자</label>
            </fieldset>
        </form>   

    3) input의 버튼관련(button,reset,submit,image)의 속성 
        - button의 type에 따라 기능을 다르게 한다 
        - button : 일반적인 버튼을 의미 
        - reset : 폼의 데이터를 삭제하는 버튼 
        - submit : 폼의 데이터를 서버로 전송하는 버튼 
        - image : 버튼을  이미지로 가져옴, 과거에 그라디언트나 모서리둥글기가 CSS로 처리가 안될때 많이 사용됨 

        - id : label테그와 이어지게 해주는 id값 
        - value : 버튼 안의 텍스트를 지정 
        - src : <input type="image"> 의 이미지 경로 속성 
        - alt : <input type="image"> 의 이미지에 대한 대체 텍스트 

        <form action="#">
            <input type="text">
            <hr>
            <input type="button" vlaue="우편번호찾기">
            <input type="image" src="btn_write_b.gif" alt="쓰기버튼">
            <input type="submit" value="회원가입">
            <input type="reset" value="입력취소">
        </form>

    4) button 테그 
        - <input>테그는 자손을 담을 수 없는 유형 
        - <button></button>테그는 자손을 담을 수 있어 다양하게 사용 가능 
        - <button>테그는 <label>과 이어지지 않아도 되서 사용이 편리 
        - type은 button, submit, reset으로 <input>의 버튼과 기능을 같다 

        <form action="#">
            <input type="button" value="로그인 >">
            <button type="button">
                <span class="left">로그인</span>
                <span class="right"> ></span>
            </button> 
        </form>   

        * <button>테그는 자손을 담을 수 있으므로 span테그로 각각 데이터를 분리  



9. 시멘틱 구조 태그   

|--------------------------------|
|   <header>                     |
|--------------------------------|
|   <nav>                        |
|-------------------|------------|
|                   |            |
|    <section>      |            |
|-------------------|  <aside>   |
|                   |            |
|    <article>      |            |
|-------------------|------------| 
|    <footer>                    |
|--------------------------------|  

    - <article> : 여러 문단을 묶는 테그, 독립적인 콘텐츠를 정의할 때 사용 
    - <aside> : 콘텐츠나 페이지의 외곽에 위치한 요소들을 묶는 테그, 보통 퀵메뉴나 스크롤탑버튼등에 사용 
    - <details> : 사용자가 보거나 숨길 수 있는 세부 콘텐츠를 정의할 때 사용 
    - <summary> : <details>테그를 통해 보여지는 콘텐츠를 담는 테그로 사용 
    - <figure> : 일러스트레이션, 다이어그램, 사진, 코드 목록 등과 같은 자체 포함 된 콘덴츠를 지정 
    - <figcaption> : <figure>테크로 정의한 일러스트레이션, 다이러그램, 사진등의 제목 설명등을 작성 
    - <header> : 페이지나 일부분의 머리말 부분을 지정 
    - <footer> : 페이지나 일부분의 꼬리말 부분을 지정 
    - <main> : 페이지의 가장 중요한 메인 부분을 지정 
    - <nav> : 페이지의 네비게이션 부분을 지정 
    - <section> : 페이지의 일부분을 지정 


 10. SVG테그 및 이미지 활용 

    1) SVG 테그란?
        - SVG테그는 백터기반 그래픽을 XML 형식으로 정의하는 것을 의미한다 
        - SVG테그는 SVG그래픽을 담기 위한 요소이다 
        - SVG테그 내부에 담을 수 있는 것은 원, 사각형, 다각형, 라인,  path등의 있다 
        - SVG테그는 파일의 모든 요소와 모든 속성에 애니메이션을 적용할 수 있다 

        <svg width="가로영역" height="세로영역">
            SVG 그래픽 
        </svg>  

    2) 모양 요소의 종류
        - SVG에는 개발자가 사용할 수 있는 몇 가지 요소가 미리 지정되어 있다
        사각형 : <rect>
        정원 : <circle>
        타원 : <ellipse>
        선 : <line>
        다각선 : <polyline>
        다각형 : <polygon>
        패스 : <path>


    3) <rect /> 테그 
        - svg내부에서 직사각형과 직사각형 모양의 변형을 만드는데 사용     

        <style>
            rect{
                fill: rgb(0,0,255);
                stroke-width:3px;
                stroke:rgb(0,0,0);
            }
        </style>

        ....

        <svg width="400" height="110">
            <rect width="300" height="100" />
        </svg>

        - <rect />테그에 속성으로 width와 height를 설정하여 영역을 설정한다 
        - fill속성은 면의 색을 의미, stroke속성은 선객을 의미, stroke-width는 선 굵기를 의미함 

        <style>
            rect{
                fill: rgb(0,0,255);
                stroke-width:3px;
                stroke:rgb(0,0,0);
                fill-opaity:0.3;
                stroke-opaity:0.7
            }
        </style>

        ....

        <svg width="400" height="300">
            <rect width="150" height="150" x="150" y="50" />
        </svg>

        - <rect />테그의 x속성은 svg테그의 영역에서 x좌표값 설정, y속성은 y좌표값을 설정한다 
        - fill-opaity는 면색의 투명도 설정, stroke-opaity는 선색의 투명도를 설정한다
        - opaity라는 속성을 쓰면 둘 다 한번에 설정도 가능하다. 단위는 0.0~0.1사이로 작성 

        <style>
            rect{
                fill: yellow;
                stroke-width:5px;
                stroke:rgb(0,0,0);
            }
        </style>

        ....

        <svg width="400" height="300">
            <rect width="150" height="150" x="10 y="10" rx="20" ry="20" />
        </svg>

        - <rect>테그의 rx와 ry속성은 모서리를 둥글게 하는 속성이다 


    3) <circle />테그 
        - svg테그 내에서 원형 도형을 만드는데 사용 

        <svg width="100" height="100">    
            <circle cx="50 cy="50" r="40" stroke="black" stroke-width="3" fill="red" />
        </svg>

        - cx와 cy속성은 원 중심의 x,y좌표를 정의함, 값을 작성하지 않으면 (0,0)으로 처리됨 
        - r속성은 원의 반지름임 


    4) <ellipse />테그 
        - svg테그 내에서 타원 도형을 만드는데 사용됨 

        <svg width="400" height="140">    
            <ellipse cx="200 cy="80" rx="100" ry="50" 
            style="fill:yellow;stroke:purple;stroke-width:2" />
        </svg>

        -cx와 cy속성은 원 중심의 x,y좌표를 정의함 
        -rx 속성은 수평 반경을 정의함 
        -ry 속성은 수직 반경을 정의함 

    5) <line /> 테그 
        - svg테그 내에서 선을 만드는데 사용 

        <svg width="400" height="210">
            <line x1="0" y1="0" x2="200" y2="200" />
        </svg>

        - x1,y1은 선의 시작 좌표, x2,y2는 선의 끝 좌표이다

    6) <polygon />테그 
        - svg테그 내에서 다각형 도형을 만드는데 사용 

        <svg width="400" height="210">
            <polygon point="200,10,250,190,160,210" />
        </svg> 

        - point속성은 점의 좌표를 나타낸다, 점의 좌표를 3개 찍으면 삼각형이 되고 4개를 찍으면 사각형, 그리고 5개를 찍으면 오각형이 된다       

    7) <polyline />테그 
        - svg테그 내에서 다각선을 만드는데 사용됨 

        <svg width="500" height="180">
            <polyline point="200,10,250,190,160,210" />
        </svg> 


 11. SVG테그 Path와 TEXT활용       

    1) <path />테그 
        - <path />테그는 일러스트레이터처럼 패스(선과 면)을 이용한 테그이다 
        - 속성중 d라는 속성에 다양한 패스 테이터를 사용할 수 있다 

        M : 이동좌표
        L : 선 길이
        H : 수평선 
        V : 수직선 
        C : 곡선
        S : 부드러운 곡선 
        Q : 2차 베이지 곡선 
        T : 부드러운 2차 베이지 곡선 
        A : 타원형 호 
        Z : 가까운 경로 


        - path를 이용한 삼각형 
        <svg width="400" height="210">
            <path d="M150 0 L75 200 L225 200 Z" />
        </svg> 

        - path를 이용한 곡선 
        <svg width="400" height="400">
            <path d="M 20 350 q 150 -300 300 0" stroke="blue" stroke-width = "5" fill="none" />
        </svg> 

        * M은 점의 시작 좌표(20,350)에서 시작하는 것이다
        * Q는 2차 베이지 곡선을 그리겠다는 의미로 현재 점에서 x축으로 150px이동, y축으로 -300인 곳에 1차 제어점이 있다는 뜻이다
        * 또 시작좌표에서 x축으로 300px이동, y축이 0인 곳에 끝점이 있다고 작성한 것이다 

    2) <text /> 테그 
        - svg테그 내에서 텍스트를 정의하는데 사용됨 

        - 기본 텍스트 입력 

        <svg width="200" height="30">
            <text x="0" y="15" fill="red">I love Geodong!</text>
        </svg>  

        * x속성은 x좌표, y속서은 y좌표이다
        * 글자색은 면색 즉 fill로 처리해줘야 한다 


        - 택스트 회전 

        <svg width="200" height="60">
            <text x="0" y="15" fill="red" transform="rotate(30,20,40)">I love Geodong!</text>
        </svg>  

        - 하위 그룹 처리 

        <svg width="200" height="90">
            <text x="10" y="20" style="fill:red;">Several lines
                <tspan x="10" y="45">First line.</tspan>
                <tspan x="10" y="70">Second line.</tspan>
            </text>
        </svg>  

12. SVG테그 Stroke 속성
    - stroke : 선색 속성 
    - stroke-width : 선 굵기 속성 
    - stroke-linecap : 선의 양쪽 끝 모양 속성 
    - stroke-dasharray : 점선처리 속성 

    1) stroke 속성 : 도형 선의 색상을 지정하는 속성 

    <svg width="300" height="80">
        <g fill="none">
            <path stroke="red" d="M5 20 I215 0" />
            <path stroke-"black" d="M5 40 I215 0" />
            <path stroke="blue" d="M5 60 I215 0" />
        </g>
    </svg>

    * g 테그는 그룹을 의미하는 테그이다 
    * M은 이동경로의 시작점을 의미하고 I는 선의 끝 좌표를 의미한다 

    2) stroke-width 속성 : 선의 굵기를 지정하는 속성 

    <svg width="300" height="80">
        <g fill="none" stroke="black">
            <path stroke-width="2" d="M5 20 I215 0" />
            <path stroke-width="4" d="M5 40 I215 0" />
            <path stroke-width="6" d="M5 60 I215 0" />
        </g>
    </svg>

    3) stroke-linecap 속성 
        - stroke-linecap 속성은 선의 가장자리를 처리하는 속성이다 
        - butt값은 선끝으로 딱 자름 
        - round값은 선끝을 둥글게 처리함 
        - square값은 선끝을 네모로 한번더 묶을 처리함 

        <svg width="300" height="120">
            <g fill="none" stroke="black" stroke-width="20">
                <path stroke-linecap="butt" d="M5 20 I215 0" />
                <path stroke-linecap="round" d="M5 60 I215 0" />
                <path stroke-linecap="square" d="M5 100 I215 0" />
            </g>
        </svg>

    4) stroke-dasharray 속성 
        - stroke-dasharray 속성은 점선을 표시하는 속성이다 
        - 홀수번째 적은 숫자는 선의 길이, 짝수번째 숫자는 공백의 길이를 의미함 

        <svg width="300" height="80">
            <g fill="none" stroke="black" stroke-width="4">
                <path stroke-dasharray="5,5" d="M5 20 I215 0" />
                <path stroke-dasharray="10,10" d="M5 40 I215 0" />
                <path stroke-dasharray="20,10,5,5,5,10" d="M5 60 I215 0" />
            </g>
        </svg>  

    5) stroke-dashoffset 속성 : 점선을 어디서 부터 보여줄지 지정하는 속성       

    <svg width="300" height="80">
        <g fill="none" stroke="black" stroke-width="4" stroke-dasharray="20,10">
            <path d="M5 20 I215 0" stroke-dashoffset="0" />
            <path d="M5 40 I215 0" stroke-dashoffset="10" />
            <path d="M5 60 I215 0" stroke-dashoffset="20" />
        </g>
    </svg>

    * 수치가 양수이면 왼쪽으로 이동, 수치가 음수이면 오른쪽으로 이동됨 


13. SVG테그의 effect와 gradient

    1) SVG Filters
        - SVG그래픽에 특수 효과를 추가하는데 사용됨 

        - <fe...>으로 구성됨, 뒤에 기능들이 영문으로 붙음 
        - <feBlend> : 이미지 결합용 필터 
        - <feColorMatrix> : 색상 변환을 위한 필터 
        - <feOffset> : 그림자를 위한 필터 
        - <feDistantLight>, <fePointLight>, <feSpotLight> : 조명용 필터
        - 많은 필터 테그가 존재함 


    2) SVG Blur Effect 
        - 백터 요소를 번지게 처리하는 효과
        - 모든 SVG필터는 <defs>테그 내에 존재함 

        -블허효과 주기전 백터 코드 
        <svg width="150" height="150">
            rect x="10" y="10" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" />
        </svg>  

        -블러효과를 준 백터 코드 
        <svg width="150" height="150">
            <defs>
                <filter id="f1" x="0" y="0">
                    <feFaussianBlur in="SourceGraphic" stdDeviation="15" />
                </filter>
            </defs>
            rect x="10" y="10" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" filter="url(#f1)" />
        </svg>  

        * <defs> 테그 안에 <filter> 테그를 처리함 
        * <filter>테그의 아이디를 추후에 백터 테그들에 filter효과의 이름으로 줄수 있음 
        * <filter> 테그의 아이디값을 f1으로 정의함   
        * 블러효과는 <feGaussianBlur>요소로 정의됨 
        * in="SourceGraphic"부분은 전체요소에 대한 효과가 생성됨을 정의함 
        * stdDeviation속성은 흐림 정도를 정의하고 수치가 높을 수록 많이 번짐 
        * <rect>테그에 filter속성으로 <filter>테그의 아이디값을 정의해주면 효과가 들어감 

    3) SVG Drop Shadows
        - 백터 요소에 그림자를 주는 효과   

        - 그림자효과를 주기전 백터 코드 
        <svg width="150" height="150">
            rect x="10" y="10" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" />
        </svg> 

        - <feOffset>으로 그림자 처리한 코드 
        <svg width="150" height="150">
            <defs>
                <filter id="f1" x="0" y="0" width="200% height="200%">
                    <feOffset result="offOut" in="SourceGraphic" dx="20" dy="20" />
                    <feBlend in="SourceGraphic" in2="offOut" mode="normal" />
                </filter>
            </defs>
            rect x="10" y="10" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" filter="url(#f1)" />
        </svg>  

        * <feOffset> 요소는 그림자 효과를 만드는데 사용됨 
        * in="SourceGraphic"은 SVG그래픽을 가져와서 그림자처리를 한다는 의미임 
        * dx와 dy속성은 요소에서 이동하는 것임 
        *<feBlend>는 원본 그래픽을 가져와 오프셋 이미지 위에 원본을 혼합함 

        - <feGaussianBlur>으로 그림자 번짐 처리한 코드 
        <svg width="150" height="150">
            <defs>
                <filter id="f1" x="0" y="0" width="200% height="200%">
                    <feOffset result="offOut" in="SourceGraphic" dx="20" dy="20" />
                    <feGaussianBlur result="blurOut" in="offOut" stdDeviation="10" />
                    <feBlend in="SourceGraphic" in2="blurOut" mode="normal" />
                </filter>
            </defs>
            rect x="10" y="10" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" filter="url(#f1)" />
        </svg>  

        * <feGaussianBlur>테그를 추가하여 <feOffset>과 연결을 위해 in 속성을 사용함 
        * <feGaussianBlur>테그를 추가하여 <feBlend>와 연결을 위해 result속성을 사용함 
        * <feBlend>의 in2값을 <feGaussianBlur>테그의 result값으로 변경함
        * <feGaussianBlur>요소의 stdDeviation 속성은 흐림 정도를 정의함 

        - 그림자를 검은색으로 변경한 코드 
        <svg width="150" height="150">
            <defs>
                <filter id="f1" x="0" y="0" width="200% height="200%">
                    <feOffset result="offOut" in="SourceAlpha" dx="20" dy="20" />
                    <feGaussianBlur result="blurOut" in="offOut" stdDeviation="10" />
                    <feBlend in="SourceGraphic" in2="blurOut" mode="normal" />
                </filter>
            </defs>
            rect x="10" y="10" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" filter="url(#f1)" />
        </svg>  

        * <feOffset>요소의 in 속성이 전체 RGBA 픽셀 대신 흐림에 알파 채널을 사용하는 "SourceAlpha"로 변경됨

        - 그림자를 다른 색으로 변경한 코드 
        <svg width="150" height="150">
            <defs>
                <filter id="f1" x="0" y="0" width="200% height="200%">
                    <feOffset result="offOut" in="SourceGraphic" dx="20" dy="20" />
                    <feColorMatrix result="matrixOut" in="offOut" type="matrix" vlaue="0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0" />
                    <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="10" />
                    <feBlend in="SourceGraphic" in2="blurOut" mode="normal" />
                </filter>
            </defs>
            rect x="10" y="10" width="90" height="90" stroke="green" stroke-width="3" fill="yellow" filter="url(#f1)" />
        </svg>

        * <feColorMatrix> 필터는 오프셋 이미지의 색상을 검은 색에 가깝게 변환하는데 사용됨, 행열에서 '0.2'의 세가지 값은 모두 빨강,녹색, 및 파랑 채널로 
          곱해짐, 값을 줄이면 색상이 검은 색에 가까워짐 
        * <feOffset>의 in은 다시 SourceGraphic으로 변경됨 
        * <feGaussianBlur>의 in은 <feColorMatrix>의 result값과 같게 처리됨   

    4) SVG Linear Gradient
    - 그라디언트는 한 색상에서 다른 색상으로 부드럽게 전환되는 것이다
    - 두가지 색 이상(여러색 적용 가능)을 이용하여 입체적 느낌을 줄 수 있다
    - <defs> 테그 내에 <linearGradient>테그가 중첩되어야 한다
    - 색포인트는 <stop>테그로 처리한다, offset속성은 색포인트가 몇%에 위치하는지 설정한다
    - 선형 그라디언트의 각도는 죄표를 통해서 처리가 가능하다
    - 수평적 그라디언트 : y1과 y2가 같고 x1과 x2가 다를 때
    - 수직적 그라디언트 : x1과 x2가 같고 y1과 y2가 다를 때
    - 대각선 그리디언트 : x1과 x2가 다르고 y1과 y2가 다를 때

    <svg width-"400" height="150">
        <defs>
            <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="0%">
                <stop offset="0%" style="stop-color:rgb(255,255,0);stop-opacity:1" />
                <stop offset="100%" style="stop-color:rgb(255,0,0);stop-opacity:1" /> 
            </linearGradient>
        </defs>
        <ellipse cx="200" cy="70" rx="85" ry="55 fill="url(#gad1)" />
    </svg>   

    * <linearGradient> 테그의 id 속성은 그리디언트의 고유한 이름을 정의한다 
    * id 속성에 작성한 값을 벡터 테그에 fill 속성의 값으로 정의해 준다
    * 위의 예제는 y속성들을 같고, x속성의 위치가 다르므로 수평적 그라디언트이다 

    5) SVG Radial Gradient
    - radial은 원형 혹은 방사형 그리디언트를 의미한다 
    - <defs> 테그 내에 <radialGradient> 테그가 중접되어야 한다 
    - <radialGradient> 테그의 cx,cy 및 r 속성은 가장 바깥 쪽 원을 정의하고 fx 및 fy는 가장 안쪽 원을 정의한다 
    - 색포인트는 <stop> 테그로 처리한다. offset 속성은 색포인트가 몇%에 위치하는지 설정한다 

    <svg width="500" height="150">
        <defs>
            <radialGradient id="grad1" cx="50% cy="50%" r="50%" fx="50%" fy="50%">
                <stop offset="0%" style="stop=color:rgb(255,255,255);stop-opacity:0" />
                <stop offset="100%" style="stop-color:rgb(0,0,255);stop-opacity:1" />
        </defs>
        <ellipse cx="200" cy="70" rx="85" ry="55" fill="url(#grad1)" />
    </svg>

    * <radialGradient> 테그의 id 속성은 그라디언트의 고유한 이름을 정의함 
    * 벡터 요소의 fill값으로 id값을 입력한다 
    * 그라디언트의 색상 범위는 둘 이상의 색상으로 구성 될 수 있으며 각 색상은 <stop> 테그로 지정된다. offset 속성은 
      그리디언트 색상이 시작되고 끝나는 위치를 정의하는 데 사용된다


14. meta 테그와 viewport  

    1) meta 테그란 
    - HTML 문서에 대한 메타 데이터를 정의한다
    - 메타 데이터는 데이터에 대안 정보이다
    - 항상 <head> 요소 안에 들어간다
    - 일반적으로 문자인코딩, 페이지 설명, 키워드, 문서 작성자 및 뷰포트 설정을 지정하는데 사용됨
    - 메타 데이터는 페이지에 표시되지 않지만 컴퓨터 구문 분석이 가능하다
    - 메타 데이터는 브라우저, 검색 엔진 및 기타 웹 서비스에서 사용됨

    <head>
        <meta charset="UTF-8">
        <meta name="description" content="거동 기업">
        <meta name="keywords" content="HTML, CSS, JavaScript, frontend">
        <meta name="author" content="거동">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>META 테그</title>
    </head>

    2) meta 테그의 속성 
    - charset : UTF-8, EU-KR 등등 각국의 언어 셋 -> HTML 문서의 문자 인코딩을 지정 
    - content : 연관된 값 -> http-equiv 또는 이름 속성과 연관된 값을 지정한다 
    - http-equiv : content-security-policy, content-type, default-style, refresh -> 콘텐츠 속성의 정보 
    - name : appliation-name, author, description, generator, keywords, viewport -> 메타 테이터의 이름을 지정 

    3) meta 테그의 http-equiv 속성 
    - 오래된 브라우저 지원을 위해 meta 테그를 작성하는 경우가 많음 

    - IE9에서 호환성보기 무시하기-특정 브라우저 지정 
        <meta http-equiv="X-UA-Compatible" content="IE=9">

    - 모든 익스플로러에서 호환성보기 무시 
        <meta http-equiv="X-UA-Compatible" content="IE=Edge">   

    - chrome을 사용하는 유저에게 렌더링해줌-가장 많이 사용하는 방식 
        <meta http-equiv="X-UA-Compatible" content="IE=Edge;chrome=1">        

    4) viewport 메타테그 
    - 모바일웹이나 반응형웹에서 각각의 기기장치를 인식할 때 사용하는 중요한 테그이다 

    <meta name="viewport" content="width=device-width, initial-scale=1.0"> 

        * width=device-width 부분은 장치의 화면 너비를 따르도록 페이지 너비를 설정한다(장치에 따라 다름)
        * initial-scale = 1.0 부분은 브라우져에서 페이지를 처음 로드 할 때 초기 확대/축소 수준을 설정한다


15. a 테그의 링크의 종류 

    1) URL을 이용한 하이퍼링크 
        <a href="URL"></a>

        - 절대 경로 
        * 파일의 탐색 경로가 파일 시스템의 루트로부터 시작해 명시된 파일의 경로 이름 
        * /images/common/xxx.jpg
        * 외부 페이지 경로 : http://tistory.com 

        <a href="URL"></a>
        <a href="http://tistory.com">티스토리 바로가기</a>

        - 상대 경로 
        * 파일 시스템에서 현재 작업 디렉토리부터 찾아갈 파일에 이르는 경로 
        * 현재 작업 파일이 무엇이냐에 따라 상대적으로 바뀌는 경로 
        * ./현재폴더의 파일 선택 
        * ../상위폴더의 파일 선택 
        * 하위폴더명/하위폴더의 파일 선택 
        
        <a href="URL"></a>
        <a href="../index.html">로고</a>


    2) 기능을 위한 링크 

        - 이메일 연결 
        <a href="mailto:test@gmail.com">Contact US</a>

        - 전화 연결 
        <a href="tel:1588-1588">고객 센터</a>

        - 문자 연결 
        <a href="SMS:101-0000-0000">문자보내기</a>

    3) 임시 링크
        <a href="#">임시링크</a>
        - 아직 페이지가 지정되어 있지 않을 때 작성하는 임시적인 링크이다 
        - 페이지경로가 생성되면 변경한다 

    4) 북마크(Book Mark=Name Anchor)
        - 같은 페이지의 특정 위치를 찾아가는 기능이다 

        <테그요소 id="아이디명"></테그요소>
        <a href="#아이디명">찾아가기</a>

        - id 속성으로 작성해야 하는 이유는 유일한 식별자로 해당 html에 한번만 작성되기 때문이다 

        <aside>
            <ul>
                <li><a href="#img01">이미지01</a></li>
                <li><a href="#img02">이미지02</a></li>
                <li><a href="#img03">이미지03</a></li>
                <li><a href="#img04">이미지04</a></li>
                <li><a href="#img05">이미지05</a></li>
            </ul>
        </aside>
        <div id="img01">
            <h3>이미지01</h3>
            <img src="img01.jpg" alt="">
        </div>
        <div id="img02">
            <h3>이미지02</h3>
            <img src="img02.jpg" alt="">
        </div>
        <div id="img03">
            <h3>이미지03</h3>
            <img src="img03.jpg" alt="">
        </div>
        <div id="img04">
            <h3>이미지04</h3>
            <img src="img04.jpg" alt="">
        </div>
        <div id="img05">
            <h3>이미지05</h3>
            <img src="img05.jpg" alt="">
        </div>

        * aside는 따라다닐 메뉴리스트들을 작성함 
        * div는 각각의 구역을 설정하고 id속성을 통해 북마크해둠
        * a 테그의 href 속성값으로 #뒤에 북마크로 해둔 id 속성값을 작성함 

        - 다른 페이지의 북마크 기능
        <a href="파일명.확장자#아이디명">외부페이지</a>

        위 코드가 test.html이라고 하면 

        index.html 파일에 아래와 같은 코드가 반영되면 test.html로 찾아간다 

        <h3><a href="test.html#img03">테스트페이지 세번째 이미지</a></h3>

        * href값을 [test.html]이라고만 적으면 해당페이지 맨위로 이동한다
        * href값을 [test.html#img03]이라고 적으면 해당페이지의 세번째 이미지로 이동한다 

    5) 빈링크
    - 버튼적 기능만 하는 링크는 페이지 이동이 있을 이유가 없음
    - 하지만 임시링크인 #만 걸어 놓으면 클리시 맨위로 페이지가 이동됨
    - 그래서 해당 html에는 없는 아이디명을 작성하는 빈링크를 작성해주면 북마크가 없으므로 이동되지 않음 


16. tabindex 테그 속성 

    1) 초점이동이란?
    - 키보드 접근성이란 스크린 리더 사용자가 키보드를 통행 웹 페이지의 정보에 접근하는 것을 의미한다 
    - 특히 초점이동이란 [tab]키를 누르면 촤측상단부터 초점받는 요소로 부터 이동되고 [shift]+[tab]키를 누르면 반대로 올라가는 것을 의미함 

    2) 기본적으로 초점을 받는 테그 
    - a : 클릭 시 페이지를 이동시키는 링크 테그 
    - button : 버튼 테그 
    - input : 사용자가 값을 입력할 수 있는 입력요소들 테그 
    - select : 여러 옶션의 값 중 한개를 선택하느 테그 
    - textarea : 여러줄 입력 상자 

    <a href="#">링크테그</a>
    <h3>제목테그</h3>
    <button>버튼테그</button>
    <input type="test">
    <p>문단테그</p>
    <select>
        <option>옵션1</option>
        <option>옵션2</option>
    </select>
    <textarea cols="30" rows"5"></textarea>

    3) tabindex 속성 
    - 요소의 탭순서를 지정하는 속성 

    - tabindex 속성값 
        양수 : 1부터 숫자를 적어 탭의 순서를 지정한다. 1이 제일 먼저 탭순서를 빋으며 그다음 번호들 순번대로 처리됨 
        0 : 초점을 받을 수 없는 h1, div 등과 같은 요소들도 초점을 받을 수 있도록 처리된다. 마크업 순서대로 탭순서를 자연스럽게 처리된다 
        -1 : a, button, input, select, textarea와 같은 테그가 댑을 못받도록 처리함 

    <a href="#" tabindex="-1">링크테그</a>
    <h3 tabindex="0">제목테그</h3>
    <button tabindex="-1">버튼테그</button>
    <input type="test" tabindex="-1">
    <p tabindex="0">문단테그</p>
    <select tabindex="-1">
        <option>옵션1</option>
        <option>옵션2</option>
    </select>
    <textarea cols="30" rows"5" tabindex="-1"></textarea>    

