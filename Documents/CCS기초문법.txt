1. CCS란 
    웹페이이지의 스타일과 내용적인 부분을 서로 분리해 놓은 서식을 스타일 시트라 한다

2. CCS 문법
    
    선택자      속성명            속성값    속성명      속성값
      a   { background-color : yellow ; font-size : 16px ;}
        선언시작                     선언 구분자

    1) HTML 요소 선택자 
       CSS를 적용할 대상으로 HTML 요소의 이름을 직접 사용하여 선택할 수 있다

        <style>
            h2{color:teal;text-decoration:underline;}
        </style>

    2) 아이디(id) 선택자
        CCS를 적용할 대상으로 특정 요소를 선택할 때 상용한다.
        이 선택자는 웹 페이지에 포함된 여러 요소 중에서 특정 아이디 이름을 가지는 요소만을 선택해 준다

        <style>
            #heading{color:teal; text-decoration:inie-through;}
        </style>

        ...
        <h2 id="heading">이 부분에 스타일이 적용됩니다.</h2>

        HTML과 CSS에서는 하나의 왭 페이지에 속하는 여러 요소에 같은 이이디 이름을 사용해도 별 문제 없이 동작하지만
        이렇게 중복된 이이디를 가지고 자바스크립트 작업을 하면 오류가 발생한다.
        따라서 되도록이면 하나의 웹 페이지에 속하는 요소에는 다른 아이디 이름을 사용하거나 클래스를 사용하는 것이 좋다.

    3) 클래스(class) 선택자
        특정 집단의 여러 요소를 한 번에 선택할 때 사용한다. 이러한 특정 집단을 클레스(class)라고 하며, 같은 클래스 이름을
        가즌 요소들을 모두 선택해 준다.

        <style>
            .heading{color:lime; text-decoration:overline;}
        </style>

        ...
        <h2 class="heading">이 부분을 스타일을 적용합니다.</h2>
        <p>class 선택자를 이용하여 스타일을 적용할 HTML 요소들을 한 번에 선택할 수 있습니다 </p>
        <h3 class="heading">이 부분에도 같은 스타일을 적용합니디.</h3>


    4) 그룹(group)선택자
        위에서 언급한 여러 선택자를 같이 사용하자 할 때 사용함. 여러 선택자를 쉼표(,)로 구분하여 연결한다.

        <style>
            h1{color:navy;}
            h1,h2{text-align:center;}
            h1,h2,p{background-color:lightgray;}
        </style>

    5) CSS 주석
        HTML에서 주석은 <!--주석 내용--> 으로 이루어 지지만 CSS에서는 /*주석 내용*/으로 이루어 진다.


3. CSS 적용
    HTML 문서에 CSS 스타일을 젹용할 때에는 다음과 같이 세 가지 방법을 사용할 수 있다
    - 인라인 스타일
    - 내부 스타일 시트
    - 외부 스타일 시트 

    1) 인라인 스타일
        인라인 스타일이란 HTML 요소 내부에 style 속성을 사용하여 CSS 스타일을 적용하는 방법이다.
        이러한 인라인 스타일은 해당 요소에만 스타일을 적용할 수 있다.

        <body>
            <h2 style="color:green; text-decoration:underline;">
                인라인 스타일을 이용하여 스타일을 적용하였습나다.
            </h2>
        </body>

        이 방식은 한 번 설정된 스타일을 변경하기가 매우 어려우며, 스타일 시트를 사용하는 많은 이점을 잃게 된다. 
        따라서 이 방식은 될 수 있으면 꼭 필요한 경우에만 사용해야 한다.

    2) 내부 스타일 시트 
        내부 스타일 시트를 이용하는 방법은 HTML 문서 내의 <head> 태그에 <style> 태그를 사용하여 CSS 스타일을 적용한다.
        이러한 내부 스타일 시트는 해당 HTML 문서에만 스타일을 적용할 수 있다.

        <head>
            <style>
                body{background-color:lightyellow;}
                h2{color:red;text-decoration:underline;}
            </style>
        </head>

    3) 외부 스타일 시트 
        외부 스타일 시트를 이용하는 방법은 웹 사이트 전체의 스타일을 하나의 파일에서 변경할 수 있도록 해준다. 
        외부에 작성된 이러한 스타일  시트 파일은 .css 확장자를 사용하여 저장된다.
        스타일을 적용할 웹 페이지의 <head> 태그를 사용하여 외부 스타일 시트를 포함애야만 스타일이 적용된다.

        <head>
            <link rel="stylesheet" href="/examples/media/expand_style.css">
        </head>

    4) 스타일 적용 우선순위

        인라인 스타일 > 내부/외부 스타일 시트 > 웹 브라우저 기본 스타일 


4. CSS 색 표현 

    1) 색상 이름으로 표현 

            aqua , black, blue, fuchsia, gray, green, lime, maroon, navy, olive, purple, red, silver,
            teal, white, yellow 등

            HTML에서 색상 이름은 대소문자를 구분하지 않는다 

    2) RGB 색상값으로 표현 

        RGB(Red,Green,Blue)  각각의 색상갑을 0~255로 표현한다

        blue => RGB(0,0,255) , green => RGB(0,255,0), sliver => RGB(192,192,192)

    3) 16진수 색상값으로 표현 
        16진수 색상값은 RGB 색상값을 각각 16진수로 변환힌 것이다.

        blue => #0000FF,  green => #00FF00, cliver=> #C0C0C0 


5. CSS 배경 

    CSS에서 사용할 수 있는 background 속성은 다음과 같다 

    1) background-color
        해당 HTML 요소의 배경색을 설정한다.

        <style>
            body{background-color:lightblue;}
        </style>

    2) background-image
        해당 HTML 요소의 배경으로 나타날 배경 이미지를 설정한다.
        설정된 배경 이미지는 기본설정으로 HTML 요소 전체에 걸쳐 반복되어 나타난다.

        <style>
            body{background-image:url("example/image/img_background_good.png");}
        </style>

    3) background-repeat
        배경 이미지는 기본 설정으로 수평과 수직 방향으로 모두 반복되어 나타난다. background-repeat 속성을 이용하면
        이러한 배경 이미지를 수평이나 수직 방향으로만 반복되도록 설정할 수 있다.

        사용할 수 있는 키워드 조합 : repeat-x, repeat-y, no-repeat

        <style>
            body{background-image:url("example/image/img_background_good.png");background-repeat:repeat-x;}
        </style>
        배경 이미지가 수평 반복한다.

        <style>
            body{background-image:url("example/image/img_background_good.png");background-repeat:repeat-y;}
        </style>
        배경 이미지가 수직 반복한다.

        <style>
            body{background-image:url("example/image/img_background_good.png");background-repeat:no-repeat;}
        </style>
        배경 이미지가 반복되지 않고 한 번만 나타난다.

    4) background-position
        반복되지 않는 배경 이미지의 상태 위치를 설정한다.

        사용할 수 있는 키워드 조합 : left top, left center, left bottom, right top, right center, right bottom,
                                  center top, center center, center bottom
            또한 퍼센트(%)나 픽셀(px)를 사용하여 상태 위치를 직접 명시할 수 있다.

        <style>
            body{
                background-image:url("example/image/img_background_good.png");
                background-repeat:no-repeat;
                background-position:top right;
            }
        </style>

        <style>
            body{
                background-image:url("example/image/img_background_good.png");
                background-repeat:no-repeat;
                background-position:100px 200px;
            }
        </style>

    5) background-attachment
        background-attachment 속성을 사용하여 위치가 설정된 배경 이미지를 해당 위치에 고정시킨다.
        이렇게 고정된 배경 이미지는 스크롤과 무관하게 화면의 위치에서 이동하지 않는다.

        <style>
            body{
                background-image:url("example/image/img_background_good.png");
                background-repeat:no-repeat;
                background-position:100px 200px;
                background-attachment:fixed;
            }
        </style>

    6) background 속성 한번에 적용하기

        <style>
            body{background:#FFCCCC ulr("example/image/img_background_good.png") no-repeat left bottom fixed;}
        </style>

6. CSS 텍스트

    1) color 속성 
    웹 페이지의 텍스트 기본 색상은 검정색이다. <body> 태그에 명시된 color 속성값은 웹 페이지 내의 모든 텍스트 요소에 적용된다.
    하지만 각 요소별로 따로 명시된 color 속성값이 있다면 해당 속성값이 <body> 태그에 명시된 속성값보다 우선 적용된다.

    <style>
            body{color:red;}
            p{color:maroon;}
    </style>

    2) direction 속성
    direction 속성은 텍스트가 써지는 방향을 설정한다.
    웹 페이지에서 텍스트는 기본적으로 왼쪽에서 오른쪽 방향으로 써진다.

    속성값 : ltr 왼쪽에서 오른쪽으로   rtl 오른쪽에서 왼쪽으로

    <style>
        .rightToLeft{direction:rtl;}
    </style>

    3) letter-spacing 속성
    letter-spacing 속성은 텍스트 내에서 글자 사이의 간격을 설정한다.

    <style>
        .incLetterSpacing{letter-spacing: 10px;}
    </style>

    4) word-spacing 속성 
    word-spacing 속성은 텍스트 내에서 단어 사이의 간격을 설정한다. 

    <style>
        .incWordSpacing{word-spacing: 10px;}
    </style>

    5) text-indent 속성 
    text-indent 속성은 단락의 첫 줄에 들여쓰기를 할자 안 할지를 설정한다. 
    웹 페이지에서는 단락은 기본적으로 들여쓰기가 설정되어 있지 않다.

    6) text-align 속성 
    text-align 속성은 텍스트의 수평 방향 정렬을 설정한다.
    text-align 속성으로 설정된 정렬 방향은 text-direction 속성과 무관하게 우선적으로 적용된다.

    속성값 : left, right, center

    7) text-decoration 속성 
    text-decoration 속성은 텍스트에 여러가지 효과를 설정하거나 제거하는데 사용된다. 
    
    속성값 : overline, line-through, underline, none 

    8) text-transform 속성 
    text-transform 속성은 텍스트에 포함된 영문자에 대한 대소문자를 설정한다. 이 속성은 텍스트에 포함된 모든 영문자를
    대문자나 소문자로 변경시켜 준다. 또한 단어의 첫 문자만을 대문자로 변경시킬 수도 있다.

    속성값 : uppercase, lowercase, capitalize

    text-transform 속성은 한글에는 영향을 주지 않으며, 오직 영문자에만 적용된다.

    9) line-height 속성 
    line-height 속성은 텍스트의 줄 간격을 설정한다. 

    10) text-shadow 속성 
    text-shadow 속성은 텍스트에 간단한 그림자 효과를 설정한다. 

    text-shadow(offset-x offset-y blur-radius color)

    <style>
        h2{text-shadow:2px 1px #3399CC;}
    </style>

7. CSS 글꼴 

    1) font-family(CSS 글꼴 잡합)
    CSS에는 두 가지의 글꼴 집합이 존재한다.

    - generic family : 비슷한 모양을 가지는 글꼴 집합 ("Serif","Monospace" 등)
    - font-family : 특정 글꼴 집합 ("Times","Courier" 등)

    <style>
        .serif{font-family:"Times New Roman",Times, serif;}
        .sansserif{font-family:Arial,Helvetica,san-serif;}
    </style>

    2) font-style 속성 
    font-style 속성은 주로 이테릭체를 사용하기 위해 사용하며, 다음과 같이 3가지의 속성값을 가진다.

    - normal : 텍스트에 어떠한 스타일도 적용하지 않음 
    - italic : 텍스트를 이탤릭체로 나타냄 
    - oblique : 텍스트를 기울임 

    3) font-variant 속성 
    font-variant 속성은 속성값이 small-caps로 설정되면, 텍스트에 포함된 영문자중 모든 소문자를 작은 대문자 글꼴로 변경시킴.
    이때 영문자중 대문자는 기존 크기 그대로 출력한다.

    <style>
        .normal{font-variant:normal;}
        .smallCaps{font-variant:small-caps;}
    </style>

    4) font-weight 속성 
    font-weight 속성은 텍스트를 얼마나 두껍게 표현할지를 설정한다. 

    속성값 : lighter, normal, bold, bolder, 숫자 100,200,300,...,900

    5) font-size 속성
    font-size 속성은 텍스트의 크기를 설정한다. 

    font-size의 속성값은 다음과 같이 두 가지 방식으로 표현할 수 있다
    -절대적 크기 : 텍스트의 크기를 명시된 크기 그대로 설정하고 할 때 사용. 절대적 크기로 설정된 텍스트는 모든 웹 브라우저에서 같은 크기로 표현됨 
    -상대적 크기 : 택스트를 둘러싸고 있는 HTML 요소들의 크기에 따라 텍스트의 크기도 같이 변하는 방식 

    font-size 크기 단위 
    - 백분율(%) : 기본 크기를 100%로 놓고 그에 대한 상대적인 크기를 설정함 
    - 배수단위(em) : 해당 글꼴(font)의 기본 크기를 1em으로 놓고 그에 대한 상대적인 크기를 설정함 
    - 픽셀단위(px) : 스크린의 픽셀을 기준으로 하는 절대적인 크기를 설정 


8. CCS 링크 
link에는 color, font-family, background 속성등 CSS의 다양한 속성들을 적용할 수 있다.
또한 text-decoration 속성값을 none으로 설정하여 링크가 연결된 텍스트의 밑줄을 제거할 수도 있다.

    1) link 상태
    - link : 링크의 기본 상태이며 사용자가 아직 한 번도 해당 링크를 통해 연결된 페이지를 방문하지 않은 상태이다 
    - visited : 사용자가 한 번이라도 해당 링크를 통해 연결된 페이지를 방문한 상태이다.
    - hover : 사용자의 마우스 커서가 링크 위에 올라가 있는 상태이다. 
    - active : 사용자의 마우스로 링크를 클릭하고 있는 상태이다. 
    - focus : 키보드나 마우스의 이벤트 또는 다른 형태로 해당 요소가 포커스를 가지고 있는 상태이다.

    2) link를 활용한 버튼(button)
    CSS를 이용하면 간단하게 링크를 버튼처럼 만들 수 있다

9. CSS 리스트 
    1) list-style-type 속성
    - 리스트 요소의 앞에 위치하는 숫자나 기호를 마커(marker)라고 하는데 list-style-type 속성을 이용하면 리스트에 
    다양한 마커를 적용할 수 있다.

    속성값 : circle, square, upper-alpha, lower-roman 등 

    2) list-style-image 속성
    - list-style-image 속성을 이용하면 마커를 자신만의 이미지로 사용할 수 있다.

    3) list-style-position 속성
    - list-style-position 속성을 이용하면 리스트 요소의 위치를 설정할 수 있다.
    - list-style-position 속성의 기본값은 outside로 설정되어 있다.

    속성값 : outside,  inside

    4) list-style 속성을 한 번에 적용하기

    <style>
        ul{list-style:squar inside ulr("/examples/image/img_list_marker.png");}
    </style>


10. CSS 테이블 
    1) border 속성
    border 속성으로 테이블의 테두리(border)를 설정할 수 있다. 이 속성을 명시하지 않으면 해당 테이블은 기본 설정으로 빈 테두리를 가진다.

    <style>
        table,th,td{border:2px solid orange;}
    </style>

    위 예제에서 테이블의 테두리(border)가 두 줄씩 나타나는 이유는 <th>태그와 <td>태그가 각각 자신만의 테두리를 가지고 있기 때문이다.
    위와 같이 두 줄로 표현되는 테두리를 한 줄로 설정하려면 border-collapse 속성을 사용해야 한다.

    2) border-collapse 속성
    border-collapse 속성값을 collapse로 설정하면 해당 테이블의 테두리는 한 줄로 표현된다.
    이 속성을 명시하지 않으면 해당 테이블은 기본 설정으로 테이블 요소별 테두리를 모두 표현하게 된다.

    속성값 : separate(기본값), collapse
    <style>
        table,th,td{border:2px solid orange;}
        table{border-collapse:collapse;}
    </style>

    3) border-spacing 속성
    border-spacing 속성은 테이블 요소(th,td)간의 여백을 설정한다.

    4) text-align 속성
    text-align 속성은 테이블 요소(th,td)내부에서 텍스트의 수평 방향 정렬을 설정한다.
    <th>태그 내부는 가운데 정렬이, <td>태그 내부는 왼쪽 정렬이 기본 설정이다.

    5) vertical-align 속성
    vertical-align 속성은 테이블 요소(th,td) 내부에서 텍스트의 수직 정렬을 설정한다.
    <th>와 <td>태그 모두 가운데 정렬이 기본 설정이다.


11. 크기 
    1) height와 widht 속성
    height와 widht 속성은 HTML 요소의 높이와 너비를 각각 설정한다.
    이 속성의 기본 설정값은 auto이며 웹 브라우저가 각 HTML 요소에 맞게 자동으로 높이와 너비를 설정해 준다

    2) max-width 속성
    이 속성은 해당 HTML 요소가 가질 수 있는 최대 너비를 설정한다. 이 속성의 기본 설정값은 none이며 해당 HTML 요소의
    너비에 제한을 두지 않는다는 의미이다 

    3) min-width 속성
    이 속성은 해당 HTML 요소가 가질 수 있는 최소 너비를 설정한다.
    이 속서의 기본 설정값은 0이며 해당 HTML 요소의 너비에 제한을 두지 않겠다는 의미이다.

    4) max-height 속성
    이 속성은 해당 HTML 요소가 가질 수 있는 최대 높이를 설정한다.
    이 속성의 기본 설정값은 none이며 해당 HTML 요소의 크기에 따라 높이가 자동으로 설정된다.

    5) min-height 속성 
    이 속성은 지정된 HTML 요소가 가질 수 있는 최소 높이를 설정한다.
    이 속서의 기본 설정값은 0이며 해당 HTML 요소의 높이에 제한을 두지 않겠다는 의미이다.


12. 박스 모델 
모든 HTML 요소는 박스(box)모양으로 구성되며, 이것을 박스 모텔(box model)이락고 부른다.
박스 모텔은 HTML 요소를 내용(content), 패딩(padding), 테두리(border), 마진(margin) 으로 구분한다.

    
    ---------------------------------------------------
    |                 margin: 10px
    |      ----------------------------------- 
    |      |          border: 20px
    |      |       --------------------------    
    |      |       |     padding: 5px
    |      |       |     --------------- 
    |      |       |     |              |
    |      |       |     |   content    |
    |      |       |     |              | 
    |      |       |     |---------------
    |      |       |
    |      |       |
    |      |       |
    |      |
    |


13. CONTENT(내용)
    CCS에서 height 와 width 속성을 설정할 때 그 크기가 가르키는 부분은 내용(content)부분만을 대상으로 한다.

14. padding(패딩) 
    padding 속성은 내용(content) 과 테두리(border) 사이의 간격인 패딩 영역의 크기를 설정한다.
    CSS에서는 HTML 요소의 패딩 영역을 설정하기 위하여 다음과 같은 속성을 제공한다.

    속성값 : padding-top, padding-right, padding-bottom, padding-left 

    <style>
        div.pad{
            padding-top:50px;
            padding-right:10px;
            padding-bottom:30px;
            padding-left:100px;
        }
    </style>

    패딩 축약 표현 
    <style>
        div.four{padding:20px 50px 30px 50px;}
        div.three{padding:20px 50px 30px;}
    </style>

    - 4개의 padding 속성값을 가질 때는 top,right,bottom,left 순으로 설정함 
    - 3개의 padding 속성값을 가질 때는 top, right 와 left, bottom 순으로 설정함 (2번째 값이 right와 left값으로 설정됨)
    - 2개의 padding 속성값을 가질 때는 top 과 bottom, right 와 left 순으로 설정함(찻번째 값은 top과 bottom에 설정되고
        두번째 값이 right 와 left에 설정됨)
    - 1개의 padding 속성값을 가질 때는 모든 패딩값을 같게 설정함 

15. 테두리 (border)
    border 속성은 내용(content) 와 패딩(padding) 영역을 둘러싸는 테두리의 스타일을 설정한다.

    1) border-style 속성 
    이 속성을 이용하면 테두리를 다양한 모양으로 설정할 수 있다 

    - dotted : 테두리를 점선으로 설정 
    - dashed : 테두리를 약간 긴 점선으로 설정 
    - solid : 테두리를 실선으로 설정함 
    - double : 테두리를 이중 실선으로 설정함 
    - groove : 테두리를 3차원인 입체적인 선으로 설정하며, border-color 속성값에 영향을 받음 
    - ridge : 테두리를 3차원인 능선효과가 있는 선으로 설정하며, border-color 속성값에 영향을 받음 
    - inset : 테두리를 3차원인 내지로 끼운 선으로 설정하며, border-color 속성값에 영향을 받음 
    - outset : 테두리를 3차원인 외지로 끼운 선으로 설정하며, border-color 속성값에 영향을 받음 
    - none : 테두리를 없앰 
    - hidden : 테두리가 존재하기는 하지만 표현되지는 않음 

    <style>
        .solid{border-style:solid;}
        .mixA{border-style:dotted dashed solid double;}
    </style>

    속성값의 갯수에 따라 top,right,buttom,left에 설정되는 규칙은 padding과 같다 

    2) border-width 속성 
    이 속성은 테두리(border)의 두께를 설정한다.
    px,em,cm등과 같은 CSS 크기의 단위를 이용하여 두께를 집접 설정하거나 미리 설정해 놓은 예약어인 thin,medium, thick 을 사용하여
    설정할 수도 있다.

    3) border-color 속성 
    이 속성은 테두리(border)의 색상을 설정한다.
    기본적인 color 속성값뿐만 아니라 투명한 선을 나타내는 transparent 속성값을 사용할 수도 있다
    이 속성값이 설정되지 않으면 해당 요소의 color 속성값을 그대로 물려받는다.

    4) 테두리의 개별 설정 
    CSS를 사용하면 테두리 위쪽,오른쪽,아래쪽,왼쪽 부분을 개별적으로 스타일을 적용할 수 있다.

    - border-top-style
    - border-right-style
    - border-bottom-style
    - border-left-style


16. margin (마진) 
    이 속성은 테두리(border)와 이웃하는 요소 사이의 간격인 마진 영역의 크기를 설정한다.
    이러한 마진 영역은 패딩 영역과 달리 background-color 속성으로 설정하는 배경색의 영향을 받지 않는다

    1) margin 속성 
    - margin-top
    - margin-right
    - margin-bottom
    - margin-left

    * margin 속성값을 음수로 설정하면 해당 요소를 다른 요소의 위에 겹치게 할 수도 있다 
    * margin 속성값을 inherit 로 설정하면 부모(parent) 요소의 margin 속성값을 그대로 물려받는다.

    <style>
        div.mar{
            margin-top:-25px;
            margin-right:10px;
            magin-bottom:30px;
            margin-left:100px;
        }
    </style>

    2) margin 축약 표현 
    <style>
        div.mar{margin:-25px 10px 30px 100px;}
    </style>

    <style>
        div.mar{margin:auto;}
    </style>

    속성값 갯수에 따라 top,right, bottom,left에 설정되는 규칙은 padding 과 같다 

    3) margin 속성값에 auto를 사용하면 웹 브라우져가 수평 방향 마진값을 자동으로 설정한다.


17. 아웃라인 
이 속성은 HTML 요소의 가장 바깥 부분을 둘러싸고 있는 아웃라인 부분의 스타일을 설정한다.
이 속성은 border 속성과 마찬가지로 style, width, color 속성을 가진다.


18. 디스플레이 
    display 특성은 웹 페이지의 레이아웃(layout)을 결정하는 CSS의 중요한 속성 중 하나이다.

    1) 블록(block)
    - display 속성값이 블럭(block)인 요소는 언제나 새로운 라인(line)에서 시작하며, 해당 라인의 모든 너비를 차지한다
    - <div>, <h1>, <p>, <ul>, <ol>, <form> 요소는 대표적인 블록(block) 요소이다.

    2) 인라인(inline)
    - display 속성값이 인라인(inline)인 요소는 새로운 라인(line)에서 시작하지 않는다. 또한 요소의 너비도 해당 라인 전체가 
    아닌 해당 HTML 요소의 내용(content)만큼만 차지한다.
    - <span>, <a>, <img> 요소는 대표적인 인라인(inline)요소이다.

    3) display 속성의 기본 설정값의 변경 
    - HTML의 모든 요소는 각각의 기본 display 속성값을 가지고 있다. 하지만 display 속성값이 블록인 요소의 속성값을 인라인으로
    바꿀수 있고 반대로 인라인인 요소의 속성값을 블록으로 바꿀 수도 있다.

    <style>
        li{display:inline;}
    </style>

    4) 인라인-블록(inline-block)
    - 인라인과 블록 이외에도 display 속성에 자주 사용되는 속성값에는 인라인-블록(inline-block)이 있다.
    - display 속성값이 인라인-블록으로 설정된 요소는 해당 요소 자체는 인라인(inline)요소처럼 동작한다.
    하지만 해당 요소 내부에는 블록(block) 요소처럼 동작한다.
    - 이처럼 인라인-블록 요소는 인라인 요소와 비슷하지만 너비와 높이를 설정할 수 있으며 블록 요소처럼 margin을 
    이용하여 여백을 지정할 수도 있다.

    5) visibility 속성 
    - visibility 속성은 HTML 요소가 웹 페이지에 표현될지 아닐지를 결정한다.
    -따라서 웹 페이지에는 나타나지 않더라도 레이아웃 내에는 여전히 존재하게 되며, 코드 내에도 당연히 존재하게 된다.
    -visibility 속성을 자바스크립트와 함께 사용하면 매우 복잡한 메뉴나 레이아웃을 손쉽게 만들 수 있다.

    속성값 :
        visible : 해당 HTML요소를 웹 페이지에 나타낸다.
        hidden : HTML 요소를 웹 페이지에 나타내지 않는다. 하지만 여전히 웹 페이지의 레이아웃에는 존재한다.
        collapse : 이 속성값은 동적이 테이블에서만 사용할 수 있으며, 테이블의 테두리를 한 줄만 보여준다.

    6) HTML 요소 숨기기 
    - HTML 요소를 숨기기 위해서는 display 속성값을 none으로 설정하면 된다.
    - 이렇게 하면 해당 요소는 웹 페이지에 더 이상 나타나지 않으며, 웹 페이지의 레이아웃에도 영향을 미치지 않는다.
    - 또한 visibility 속성값을 hidden으로 설정해도 HTML 요소를 숨길 수 있다. 하지만 display 속성값을 none으로 
    설정한 것과는 달리, 눈에 보이지만 않을 뿐 여전히 웹 페이지이의 레이아웃에는 존재한다.

    * 따라서 민감하거나 귀중한 데이터를 visibility 속성을 이용하여 감추는 것은 바람직하지 못하다.

    7) opacity 속성 
    - opacity 속성을 이용하면 HTML 요소의 투명도를 간단히 조절할 수 있다.
    - opacity 속성값은 0.0 부터 1.0까지 설정할 수 있으며 속성값이 0에 가까울수록 투명한 상태가 된다.


19. 포지션 
    1)position 속성 
    - position 속성은 HTML 요소가 위치를 결정하는 방식을 설정한다.

    - 정적 위치(static position)지정 방식 
    - 상대 위치(relativ position)지정 방식 
    - 고정 위치(fixed position)지정 방식 
    - 절대 위치(absolute position)지정 방식 

    2) 정적 위치(static position)지정 방식 
    - HTML 요소의 위치를 결정하는 가장 기본적인 방식은 정적 위치 지정 방식이다.
    - position 속성값이 static으로 설정된 요소는 top, right, bottom, left 속성값에 영향을 받지 않는다.
    - 정적 위치 지정 방식은 단순히 웹 페이지의 흐름에 따라 차례대로 요소들을 위치시키는 방식이다.

    * 모든 HTML요소의 position 속성의 기본 설정값은 static 이다.

    3) 상대 위치(relativ position)지정 방식 
    - 상대 위치(relativ position)지정 방식은 해당 HTML 요소의 기본 위치를 기준으로 위치를 설정하는 방식이다.
    - HTML 요소의 기본 위치란 해당 요소가 정적 위치 지정 방식일 때 결정되는 위치를 의미한다.

    4) 고정 위치(fixed position)지정 방식 
    - 고정 위치(fixed position)지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식이다.
    - 즉 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 된다.

    5) 절대 위치(absolute position)지정 방식 
    - 절대 위치(absolute position)지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작한다.
    - 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor)요소를 기준으로 위치를 설정하게 된다.
    - 하지만 위치가 설정된 조상(ancestor)요소를 가지지 않는다면 HTML 문서의 body 요소를 기준으로 설정하게 된다.

    6) 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 
    - 정적 위치 지정 방식을 제외한 나머지 다른 방식들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식이다.

    - 상대 위치 : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함 
    - 고정 위치 : 뷰포트에 상대적으로 위치람 
    - 절대 위치 : 위치가 설정된 바로 상위의 조상(ancestor)요소에 상대적으로 위치함 

    7) z-index 속성 
    - HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있다.
    - z-index 속성은 이렇게 겹치는 요소들이 쌓이는 스택의 순서를 설정한다.
    - 스택의 순서는 양수나 음수 모두 설정할 수 있으며 크기가 클수록 앞쪽에 위치하게 된다.


20. Float 
    1) float 속성 
    - float 속성은 해당 HTML 요소가 주변의 다른 요소들과 자연스럽게 어울리도록 만들어 준다.
    - 이 속성은 본래 위와 같은 목적으로 만들어졌지만 현재는 웹 페이지의 레이아웃을 작성할 때 자주 사용된다.

    2) clear 속성 
    - clear 속성은 float 속성이 적용된 이후 나타나는 요소들의 동작을 조절해 준다.
    - 컨테이너 요소에 float 속성이 적용되면 그 이후에 등장하는 모든 요소들은 정확한 위치를 설정하기가 힘들어진다.
    - 따라서 float 속성을 적용하고자 하는 요소가 모두 등장한 이후에는 clear 속성을 사용하여 이후에 등장하는 요소들이 
    더는 float 속성에 영향을 받지 않도록 설정해 주어야 한다.

    3) overflow 속성 
    - float 속성이 적용된 HTML 요소가 자신을 감싸고 있는 컨데이너 요소보다 크면 해당 요소의 일부가 밖으로 흘러 넘치게 된다.
    - 이때 overflow 속성값을 auto로 설정하면 컨테이너 요소의 크기가 자동으로 내부의 요소를 감쌀 수 있을 만큼 커지게 된다.

    4) float 속성을 이용한 레이아웃 
    - 현재 웹 페이지의 레이아웃은 대부분 float 속성을 이요하여 작성됨


21. 정렬
    1) 정렬 (align)
    - 블록(block) 타입의 요소를 정렬하기 위해서는 다음과 같은 방법을 사용할 수 있다.

    - margin 속성을 이용한 가운데 정렬
    - position 속성을 이용한 좌우 정렬 
    - float 속성을 이용한 좌우 정렬 

    2) margin 속성을 이용한 가운데 정렬
    - magin 속성값을 auto로 설정하면 해당 요소를 감싸고 있는 컨테이너 요소를 기준으로 수평방향 가운데 정렬이 된다.
    - 이때 해당 요소는 특정한 너비를 가져야 하며 너비를 제외한 나머지 공간은 좌우로 균등하게 나뉘어 여백으로 만들어진다.

    3) position 속성을 이용한 좌우 정렬 
    - 절대 위치 지정 방식으로 위치한 요소는 정상적인 레이아웃에서 벗어나 다른 요소와 겹칠 수 있게 된다.
    - 따라서 이 특성을 이용하면 HTML 요소를 수평 방향으로 좌우 정렬할 수 있다.

    4) float 속성을 이용한 좌우 정렬 
    - float 속성을 이용하면 수평 방향으로 좌우 정렬할 수 있다.


22. 선택자(select)
    CCS에서는 스타일을 적용할 대상을 선택하기 위하여 선택자을 사용한다.

    - 전체 선택자
    - HTML 요소 선택자
    - 아이디(id) 선택자
    - 클래스(class) 선택자
    - 그룹(group) 선택자

    1) 전체 선택자
    CCS를 적용할 대상으로 HTML 문서 내부의 모든 요소를 선택한다.

    <style>
        *{color:red;}
    </style>

    2) HTML 요소 선택자 
    CCS를 적용할 대상으로 HTML 요소의 이름을 직접 사용하여 선택할 수 있다.

    <style>
        h2{color:tear; text_decoration:underline;}
    </style>
    ...
    <h2>이 부분에 스타일을 적용합니다</h2>

    3) 아이디(id) 선택자 
    아이디 선택자는 CSS를 적용할 대상으로 특정 요소를 선택할 때 사용한다 
    이 선택자은 웹 페이지에 포함된 여러 요소중에서 특정 아이디 이름을 가지는 요소만 선택해 준다 

    <style>
        #heading{color:sandybrown;text-decoration:line-through;}
    </style>
    ...
    <h2 id="heading">이 부분에 스타일을 적용합니다</h2>

    HTML과 CSS에서는 하나의 웹 페이지에 속하는 여러 요소에 같은 아이디 이름을 사용해도 별 문제없이 동작한다.
    하지만 이렇게 중복된 아이디를 가지고 자바스크립트 작업을 하게 되면 오류가 발생한다.
    따라서 되도록이면 하나의 웹 페이지에 속하는 요소에는 다른 이이디 이름을 사용하거나 클래스를 사용하는 것이 좋다.

    4) 클레스(class) 선택자 
    클래스 선택자는 특정 집단의 여러 요소를 한 번에 선택할 때 사용한다.
    이러한 특정 집단을 클래스(class)라고하며, 같은 클래스 이름을 가지는 요소들을 모두 선택해 준다.

    <style>
        .headings{color:deepskyblue;text-decoration:overline;}
    </style>
    ...
    <h2 class="headings">이 부분에 스타일을 적용합니다</h2>

    5) 그룹 선택자 
    그룹 선택자는 위에서 언급한 여러 선태자를 같이 사용하고자 할 때 사용한다.
    그룹 선택자는 여러 선택자를 쉼표(,)로 구분하여 연결한다.


23. 결합 선택자 
    CSS 선택자는 하나 이상의 선택자를 포함할 수 있다.
    결합 선택자는 연관된 선택자들 간의 관계를 설정해 준다.

    1)자손 선택자(descendant selector)
    자손 선택자는 해당 요소의 하위 요소 중에서 특정 타입의 요소를 모두 선택한다.

    다음 예제는 모든 <div>태그의 하위 요소 중에서 <p>태그를 모두 선택하는 예제이다.

    <style>
        div p{background-color:#FFEFD5;}
    </style>

    위 예제처럼 자손 선택자는 div와 p 사이에 한 칸의 띄어쓰기를 반드시 명시해야 한다.

    2) 자식 선택자(child selector)
    자식 선택자는 해당 요소의 바로 밑에 존재하느 하위 요소 중에서 특정 타입의 요소를 모두 선택한다.

    다음 예제는 모든 <div>태그의 바로 밑에 존재하는 하위 요소 중에서 <p> 태그를 모두 선택하는 예제이다.

    <style>
        div>p{background-color:#FFEFD5;}
    </style>

24. 동위 선택자 
    1) 동위 선택자(sibling selector)
    동위 선택자는 동위 관계에 있는 요소 중에서 해당 요소보다 뒤에 존재하는 특정 타입의 요소를 모두 선택한다.
    동위 관계란 HTML 요소의 계층 구조에서 같은 부모(parent) 요소를 가지고 있는 요소를 의미한다.
    이러한 동위 관계에 있는 요소들을 형제(sibling) 요소라고 한다.

    2) 일반 동위 선택자(general sibling selector)
    일반 동위 선택자는 해당 요소와 동위 관계에 있으며, 해당 요소보다 뒤에 존재하는 특정 타입의 요소를 모두 선택한다.

    다음 예제는 모든 <div>태그와 동위 관계에 있는 요소 중에서 <div>태그보다 뒤에 존재하는 <p>태그를 모두 선택하는 예제이다.

    <style>
        div~p{background-color:#FFE4E1;}
    </style>

    3) 인접 동위 선택자(adjacent aibling selector)
    인접 동위 선택자는 해당 요소와 동위 관계에 있으며 해당 요소의 바로 뒤에 존재하는 특정 타입의 요소를 모두 선택한다.

    다음 예제는 모든 <div>태그와 동위 관계에 있는 요소 중에서 <div>태그의 바로 뒤에 존재하는 <p>태그를 모두 선택하는 예제이다.

    <style>
        div+p{background-color:#FFE4E1;}
    </style>


25. 의사 클래스
    1) 의사 클래스(pseudo-class)
    CSS에서 의사 클래스(pseudo-class)는 선택하고자 하는 HTML 요소의 특별한 상태(state)를 명시할 때 사용한다.

    2) 의사 클래스 문법
    의사 클래스(pseudo-class)를 사용하기 위한 문법은 다음과 같다.

    선택자:의사클래스이름{속성:속성값;}

    클래스(class)나 아이디(id)에도 의사 클래스(pseudo-class)를 사용할 수 있다.

    선택자.클래스이름:의사클래스이름{속성:속성값;}
    선택자#아이디이름:의사클래스이름{속성:속성값;}

    *의사 클래스의 이름은 대소문자를 구분하지 않는다.

    3) 대표적인 CSS 의사 클래스 
        - 동적 의사 클래스(dynamic pseudo-classes)
        . :link     사용자가 한 번이라도 해당 링크를 통해 연결된 페이지를 방문하지 않은 상태를 모두 선택함 
        . :visited  사용자가 한 번이라도 해당 링크를 통해 연결된 페이지를 방문한 상태를 모두 선택함 
        . :hover    사용자의 마우스 커서가 링크 위에 올라가 있는 상태를 모두 선택함 
        . :active   사용자가 마우스로 링크를 클릭하고 있는 상태를 모두 선택함
        . :focus    초점이 맟춰진 input 요소를 모두 선택함 

        - 상태 의사 클래스(UI element states pseudo-classes)
        . :checked  체크된 상태의 input 요소를 모두 선택함 
        . :enable   사용할 수 있는 input 요소를 모두 선택함
        . :disable  사용할 수 없는 input 요소를 모두 선택함 

        - 구조 의사 클래스(structural pseudo-classes)
        . :first-child  모든 자식 요소 중에서 첫번째에 위치하는 자식요소를 모두 선택함
        . :last-child   모든 자식 요소 중세서 마직막에 위치하는 자식요소를 모두 선택함
        . :nth-child    모든 자식 요소 주에서 n번째에 위치하는 자식요소를 모두 선택함
        . :first-of-type    모든 자식 요소 중세서 첫번째로 등장하는 특정 요소를 모두 선택함 
        . :last-of-type 모든 자식 요소 중에서 마지막으로 등장하는 특정 요소를 모두 선택함 
        . :nth-of-type  모든 자식 요소 중세서 n번째로 등장하는 특정 요소를 모두 선택함
        . :only-child   자식 요소를 단 하나만 가지는 모든 요소의 자식 요소를 선택함
        . :only-of-type 자식 요소를 특정 요서 단 하나만 가지는 모든 요소의 자식 요소를 선택함 
        . :empty        아무런 자식 요소도 가지지 않는 요소를 모두 선택함
        . :root     문서의 root 요소를 선택함 

        - 기타 의사 클래스 
        . :not      모든 선택자와 함께 사용할 수 있으며 해당 선택자를 반대로 적용함
        . :lang     특정 요소를 언어 설정에 따라 다르게 표현할 때에 사용함
        . :target   현재 활성화된 target 요소를 모두 선택함 
        . :in-range 특정 범위 내의 값을 가지는 input 요소를 모두 선택함 
        . :out-of-range     특정 범위를 벗어나는 값을 가진 input 요소를 모두 선택함 
        . :read-only    readonly 속성을 가지고 있는 input 요소를 모두 선택함 
        . :read-write   readonly 속성을 가지지 않는 input 요소를 모두 선택함 
        . :required     required 속성을 가지는 input 요소를 모두 선택함
        . :optional     required 속성을 가지지 않는 input 요소를 모두 선택함
        . :valid    유효한 값을 가지는 input 요소를 모두 선택함   
        . :invalid  유효하지 않은 값을 가지는 input 요소를 모두 선택함     
        

26. 의사 요소 (pseudo=element)
    의사 요소(pseudo=element)는 해당 HTML 요소의 특정 부분을 선택할 때 사용한다.

    1) 의사 요소 문법

    선택자::의사요소이름{속성:속성값;}

    2) 대표적인 CSS 의사 요소 

        - ::first-letter
        - ::first-line
        - ::befor
        - ::after
        - ::selection

    3) ::first-letter 
    이 의사 요소는 텍스트의 첫 글자만을 선택한다. 단 블럭(block)타입의 요소에만 사용할 수 있다 

    이 의사 요소를 통해 사용할 수 있는 속성은 다음과 같다

    - font 속성
    - color 속성 
    - background 속성 
    - margin 속성 
    - padding 속성 
    - border 속성 
    - text-decoration 속성 
    - text-transform 속성 
    - line-height 속성
    - float 속성 
    - clear 속성 
    - vertical-align 속성 (단 float속성값이 none일 경우만)

    4) ::first-line
    이 의사 요소는 택스트의 첫 라인만을 선택한다. 단 블럭(block)타입의 요소에만 사용할 수 있다.

    이 의사 요소를 통해 사용할 수 있는 속성은 다음과 같다.

    - font 속성 
    - color 속성
    - background 속성 
    - word-spacing 속성
    - letter-spacing 속성 
    - text-decoration 속성 
    - text=transform 속성 
    - line-height 속성 
    - clear 속성 
    - vertical-align 속성 

    5) ::befor 
    이 의사 요소는 특정 요소의 내용(content)부분 바로 앞에 다른 요소를 삽입할 때 사용한다

    6) ::after 
    이 의사 요소는 특정 요소의 내용부분 바로 뒤에 다른 요소를 삽입할 때 사용한다.

    7) ::selection
    이 의사 요소는 해당 요소에서 사용자가 선택한 부분만을 선택할 때 사용된다.

    * 하나의 HTML 요소에 여러 개의 의사 요소를 동시에 적용할 수 있다 


27. 속성 선택자(attribute selectors)
    속성 선택자을 사용하면 특정 속성이나 특정 속성값을 가지고 있는 HTML 요소를 선택할 수 있다 

    1) 기본 속성 선택자 

    - [속성이름] 선택자 
    - [속성이름="속성값"] 선택자 

    2) [속성이름] 선택자
    [속성이름] 선택자는 특정 속성을 가지고 있는 요소를 모두 선택한다.

    <style>
        [title]{background:black;color:yellow;}
    </style>

    3) [속성이름="속성값"] 선택자 
    [속성이름="속성값"] 선택자는 특정 속성을 가지고 있으며, 해당 속성의 속성값까지 일치하는 요소들 모두 선택한다.

    <style>
        [title="first h2"]{background:black;color:yellow;}
    </style>

    4) 문자열 속성 선택자 
    CSS에서는 기본 속성 선택자 이외에도 문자열 속성 선택자를 제공한다.
    문자열 속성 선택자는 HTML 요소가 가지고 있는 특정 속성의 속성값 내에 특정 문자열을 확인하고 선택한다.

    - [속성이름~="속성값"] 선택자 
    - [속성이름|="속성값"] 선택자 
    - [속성이름^="속성값"] 선택자 
    - [속성이름$="속성값"] 선택자
    - [속성이름*="속성값"] 선택자 

    5) [속성이름~="속성값"] 선택자 
    [속성이름~="속성값"] 선택자는 특정 속성의 속성값에 특정 문자열로 이루어진 하나의 단어를 포함하는 요소를 모드 선택한다.

    <style>
        [title~="first"]{background:black;color:yellow;}
    </style>

    [속성이름~="속성값"] 선택자는 띄어쓰기를 기준으로 단어를 인식한다. 따라서 여러 단어를 하이픈(-)으로 연결된 단어는 
    하나의 단어를 인식하며 각각 별도의 단어로 인식하지 않는다.("first h2"나 "first p"등은 인식되지만 "first-p"인 요소는 인식하지 않는다.)

    6) [속성이름|="속성값"] 선택자 
    [속성이름|="속성값"] 선택자는 특정 속성의 속성값이 특정 문자열로 이루어진 하나의 단어로 시작하는 요소를 모두 선택한다.

    <style>
        [title|="first"]{background:black;color:yellow;}
    </style>

    [속성이름|="속성값"] 선택자는 속성값으로 주어진 하나의 단어 혹은 하나의 단어 다음에 하이폰(-)으로 시작하는 요소만을 선택한다.("first h2",
    "first p"등은 선택이 안되고 "first"나 "first-p"등은 선택된다.)

    7) [속성이름^="속성값"] 선택자 
    [속성이름^="속성값"] 선택자는 특정 속성의 속성값이 특정 문자열로 시작하는 요소를 모두 선택한다.

    <style>
        [title^="first"]{background:black;color:yellow;}
    </style>

    위 예제에서는 title 속성값이 "first"로 시작하는 요소가 모두 선택된다.("first h2","first p", "first-p" 등 모두 선택되나 "p first"
    등은 인식하지 않는다.)

    8) [속성이름$="속성값"] 선택자 
    [속성이름$="속성값"] 선택자는 특정 속성의 속성값이 특정 문자열로 끝나는 요소를 모두 선택한다.

    <style>
        [title$="first"]{background:black;color:yellow;}
    </style>

    이 선택자는 특정 속성의 속성값이 특정 문자열로 끝나기만 하면 모두 선택한다.("h2 first" "p first" "p-first"등은 선택되나 "first h2" 등은
    선택되지 않는다)

    9) [속성이름*="속성값"] 선택자 
    [속성이름*="속성값"] 선택자는 특정 속성의 속성값에 특정 문자열을 포함하는 요소를 모두 선택한다.

    <style>
        [title*="first"]{background:black;color:yellow;}
    </style>

    이 선택자는 특정 속성의 속성값이 특정 문자열을 포함하기만 하면 모두 선택한다.("first h2","my-first-p","p-first"등 모두 선택된다.)

    10) 속성 선태자의 활용
    위에서 설명한 속성 선택자들을 활용하면 클래스나 이이디의 지정 없이도 스타일을 적용할 HTML 요소를 손쉽게 선택할 수 있다.


28. 기타 의사 클래스 

    1) :not 
    :not 선택자는 모든 선택자와 함께 사용할 수 있으며, 해당 선택자를 반대로 적용하게 선택한다.

    2) :lang 
    :lang 선택자는 특정 HTML 요소를 사용자 컴퓨터의 언어 설정에 따라 다르게 표현할 때 사용한다.












